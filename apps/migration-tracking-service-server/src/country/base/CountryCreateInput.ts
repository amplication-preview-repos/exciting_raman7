/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested, IsInt } from "class-validator";
import { DeparturePointCreateNestedManyWithoutCountriesInput } from "./DeparturePointCreateNestedManyWithoutCountriesInput";
import { Type } from "class-transformer";
import { EntryPointCreateNestedManyWithoutCountriesInput } from "./EntryPointCreateNestedManyWithoutCountriesInput";
import { RegionCreateNestedManyWithoutCountriesInput } from "./RegionCreateNestedManyWithoutCountriesInput";

@InputType()
class CountryCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code?: string | null;

  @ApiProperty({
    required: false,
    type: () => DeparturePointCreateNestedManyWithoutCountriesInput,
  })
  @ValidateNested()
  @Type(() => DeparturePointCreateNestedManyWithoutCountriesInput)
  @IsOptional()
  @Field(() => DeparturePointCreateNestedManyWithoutCountriesInput, {
    nullable: true,
  })
  departurePoints?: DeparturePointCreateNestedManyWithoutCountriesInput;

  @ApiProperty({
    required: false,
    type: () => EntryPointCreateNestedManyWithoutCountriesInput,
  })
  @ValidateNested()
  @Type(() => EntryPointCreateNestedManyWithoutCountriesInput)
  @IsOptional()
  @Field(() => EntryPointCreateNestedManyWithoutCountriesInput, {
    nullable: true,
  })
  entryPoints?: EntryPointCreateNestedManyWithoutCountriesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  population?: number | null;

  @ApiProperty({
    required: false,
    type: () => RegionCreateNestedManyWithoutCountriesInput,
  })
  @ValidateNested()
  @Type(() => RegionCreateNestedManyWithoutCountriesInput)
  @IsOptional()
  @Field(() => RegionCreateNestedManyWithoutCountriesInput, {
    nullable: true,
  })
  regions?: RegionCreateNestedManyWithoutCountriesInput;
}

export { CountryCreateInput as CountryCreateInput };
