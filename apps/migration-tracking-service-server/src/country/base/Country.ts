/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsDate,
  ValidateNested,
  IsInt,
} from "class-validator";
import { Type } from "class-transformer";
import { DeparturePoint } from "../../departurePoint/base/DeparturePoint";
import { EntryPoint } from "../../entryPoint/base/EntryPoint";
import { Region } from "../../region/base/Region";

@ObjectType()
class Country {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  code!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [DeparturePoint],
  })
  @ValidateNested()
  @Type(() => DeparturePoint)
  @IsOptional()
  departurePoints?: Array<DeparturePoint>;

  @ApiProperty({
    required: false,
    type: () => [EntryPoint],
  })
  @ValidateNested()
  @Type(() => EntryPoint)
  @IsOptional()
  entryPoints?: Array<EntryPoint>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name!: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  population!: number | null;

  @ApiProperty({
    required: false,
    type: () => [Region],
  })
  @ValidateNested()
  @Type(() => Region)
  @IsOptional()
  regions?: Array<Region>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Country as Country };
